services:
  db:
    image: postgres:latest
    container_name: db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - flasknet
    ports:
      - 5432:5432
    env_file:
      - .env

  app:
    build:
      context: .
    image: nksc2c
    container_name: nksc2c
    environment:
      - PYTHONUNBUFFERED=1
    command: rundevserver
    volumes:
      - .:/code
    depends_on:
      - db
    env_file:
      - .env
    networks:
      - flasknet
    ports:
      - 8000:8000

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/www/certbot:/var/www/certbot
      - ./nginx/www/certbot/.well-known:/var/www/certbot/.well-known
      - certbot-etc:/etc/letsencrypt
    depends_on:
      - app
    networks:
      - flasknet
    ports:
      - 8080:80
      - 443:443
    restart: always

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./nginx/www/certbot:/var/www/certbot
      - ./nginx/www/certbot/.well-known:/var/www/certbot/.well-known
      - certbot-etc:/etc/letsencrypt
    # command: certonly --webroot --webroot-path=/var/www/certbot --email blus.vijkel@protonmail.com --agree-tos --no-eff-email -d tccup-api.kenyasparks.com
    networks:
      - flasknet

volumes:
  postgres_data:
  certbot-etc:

networks:
  flasknet:
    name: flasknet
    driver: bridge
